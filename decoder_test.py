# -*- coding: utf-8 -*-

import numpy
import scipy.signal
import scipy
import sys
import peewee
from db_config import ground_login

HOST     = ground_login['host']
DATABASE = ground_login['database']
USER     = ground_login['user']
PASS     = ground_login['password']
GROUND = peewee.MySQLDatabase(database=DATABASE, host=HOST, user=USER, passwd=PASS) 

def decode(a,b,c,d):
	start = ord('$')
	#print(start)
	high = (ord(a)-start) << 12
	mhigh = (ord(b)-start) << 8
	mlow = (ord(c)-start) << 4
	low = (ord(d)-start)

	return high + mhigh + mlow + low 

def preprocess(data):
	output = scipy.signal.medfilt( data, 5 ) 	# median filter

	m = min(output)
	mx = max(output)
	output = numpy.array([(i - m) for i in output])
	
	#mx = max(output)
	output = numpy.array([(i / mx) for i in output]) # normalized intensity from 0 to 1
	
	return output

def color_parse(signature):

	blue = sum( signature[219:315] )	# max  96
	green = sum( signature[316:475] )		# 159 
	red = sum( signature[580:849] )			# 269

	blue = 255 * blue / 96
	green = 255 * green / 159
	red = 255 * red / 269

	return red, green, blue

def find_bias(white_bal):

	white_bal = [ decode(white_bal[4*i], white_bal[4*i+1], white_bal[4*i+2], white_bal[4*i+3] ) for i in range(29,980) ]
	white_bal = scipy.signal.medfilt(white_bal, 5)
	median = scipy.median(white_bal)
	white_bal = numpy.array([ (median-w)/w for w in white_bal ]) #  % deviation from median

	return white_bal

def Process(signature, white_bal):
	signature = [ decode(signature[4*i], signature[4*i+1], signature[4*i+2], signature[4*i+3] ) for i in range(29,980) ]
	#print(signature)
	
	signature = preprocess(signature)
	signature = scipy.multiply(signature, white_bal)

	return signature

def main():


	# cursor = GROUND.execute_sql('SELECT signature FROM spectrum LIMIT 1')
	# encoded_signature = cursor.fetchone()[0]
	# cursor = GROUND.execute_sql('SELECT white_bal FROM scan LIMIT 1')
	#encoded_white_bal = cursor.fetchone()[0]
	encoded_white_bal = "$*$,$)0+$)2+$)2,$)2-$)1+$*$2$)20$)30$)3-$)2,$)2$$)3'$*$1$)2$$)3'$)1($)13$*&($)2-$).-$)/+$)2%$)22$)10$)2&$*%)$)2.$)3*$)2/$)3&$)20$)3)$)3$$)2+$)3.$)30$)32$)1%$).2$)2($)3+$*$$$)3($)2($)3&$)3)$)13$)0'$)3($*%-$)2-$)1$$)1/$*$%$)03$)2&$),,$)2/$)2+$*$3$)2%$)1-$)3+$*%$$)3)$)2($)1)$)3$$)2&$*%'$)11$)1.$)3)$)20$*%%$)3*$*$%$*$/$)2%$)2/$*$-$*$&$)1-$)01$)1*$)3($)2*$)3$$*$2$)22$)30$)1'$)3+$)//$)2$$)3/$)3)$)3-$)1,$)01$)3.$)2&$*$)$*$)$*$,$)23$*$.$)3.$)10$)20$)21$)2/$)3($*$)$)12$*$)$*$,$*$2$*%/$)3.$)31$)3,$)2+$)0.$)3+$)1+$*$)$)32$*$-$)3'$)/$$)2,$)3-$)3,$)/0$)10$)1%$)-/$*$&$)0-$)2,$)3$$)+%$*%)$*$/$*$)$*$)$*$%$)2-$)2+$)2&$)31$*%$$*$/$)/&$)30$*%%$)23$)2+$)/.$*$'$)23$*$2$)3,$*%($)2+$)32$)30$)3*$)22$)3$$*$$$)2&$)3,$*$%$)3'$)03$)3&$).1$)30$)32$)3,$)30$)0)$)2)$)1)$)10$)3%$*$0$*$($)0,$*$&$*$)$*$.$*$,$*$'$*%,$)3,$)1)$)0+$)12$)3,$)2+$)1&$)3-$*%*$)3($)31$)2'$)3($*''$*)3$*$/$*+-$*+1$*)$$*%-$*%)$*&,$)3/$*%)$)3)$)3$$*$'$*%2$)33$*&,$)3-$)30$*$+$)3.$*$-$)3&$)3($)/2$*$/$)3.$)3-$)2'$)10$*%%$)0%$)3$$*$1$*$1$)3+$*%*$*%)$*'$$*&)$*$-$)20$*$*$)0+$*$*$)..$)2.$*&($*$3$*%+$*$2$*&%$)3*$*$$$)03$*%1$)3,$*%,$*%'$)3.$)20$*%'$*%1$)1&$*%$$*&,$*$,$)32$)2&$)3*$)3'$)2%$)3)$*$0$*$1$*%%$*&%$)23$*%)$)3($*%$$*&($*$+$*$%$)31$*%3$)22$*%/$*$)$*$/$*%/$*%,$*%-$)11$*%)$*$($)31$*$3$*$*$*&'$*%%$*%3$*%.$*%1$*%+$*%+$*(*$*%0$*(1$*(-$*)1$*,+$*+2$*+1$*-%$*,&$*+*$*(*$*)+$*(,$*)-$*(/$*(3$**-$*'%$*'2$*)'$*)0$*&,$*)$$*&'$*%2$*''$*%+$*%,$*&-$*',$*&*$*$3$*&($*'%$*%,$*&*$*$+$)3*$*&&$(&%$*$-$*$%$*$,$*&$$)3($)2$$)3,$*%*$*$/$)3)$)&1$)3*$)3/$*$$$*%$$*%%$*$*$).,$)22$*%%$*%'$)12$*$2$*$%$*$3$)3+$)3+$)30$)3)$)2'$*$($).2$*$+$)3($)2$$)3/$*$)$*%+$)23$*$,$)3/$)2($)//$)1.$)3($)21$*$&$)32$*$,$*$3$)3*$)2,$)2+$*$'$)0'$).&$)3($*%-$)3'$)0($)2$$)33$*&$$*%-$)32$)23$*&,$*$/$*$0$*&$$*$-$*$,$*'.$*'1$*+)$**+$*-/$*.2$*3'$++%$+13$,*/$,.+$,2-$-$+$-&&$,30$,1($,20$-&%$-(/$-)1$-*($-+$$-%%$,+)$,)2$+2-$+/+$+-'$+*&$+&)$+$&$*-%$*.0$*-/$*+1$*+-$*+)$*+*$*(.$*(.$*''$*%2$*%2$*$$$*$3$*%1$)/3$*%$$*&'$)2.$*$%$)31$*%.$*$2$*$($*$3$)2*$)21$*&%$*%($)12$)03$*&'$)32$)23$)3+$*$&$)2,$*&&$*$+$)2*$*$&$)0-$)3'$*$3$)/1$)23$*$+$)3+$)2,$*&,$*%+$*$-$*'0$*$)$*)*$*'0$*(*$**3$*)&$*)2$*'1$*+&$*+.$**2$*,,$*-)$*..$*.3$*/%$*1$$*/&$*0+$*.$$*1($*0%$*33$*13$*3$$*1+$*2)$*-)$*+/$*,/$*)($*-1$*+0$*0&$*3%$*2%$*1*$*1.$*.($*-($**,$*(3$*+'$**+$**-$*'*$*),$*.)$*,%$*.-$*.-$*,'$*+/$*)1$*+$$*'/$*(*$*'0$*'/$*)1$*)'$*(+$*(.$*,-$*,&$*+$$*.*$*3)$+(,$,$/$-.,$/,/$1-,$20($3/'$3-%$2+/$1&($/1($.*$$.%,$-*'$-$%$,)*$+3/$+-0$+)/$+'($*0&$+$+$*2/$*10$+$)$+%)$*..$+'&$+'*$*3+$+&1$+%3$+&($+*,$+(+$+%.$+'.$+)1$+'2$+%'$+&%$+&/$+&%$+%2$+)$$+*'$+.%$++,$++,$+('$+$,$*0)$*).$*+2$*)($)32$*($$*$$$*&3$*&-$*$)$*%%$*$.$)3*$)3,$*$1$*')$*&%$*'$$)3*$*'0$*%-$*'%$*'$$*&0$*%3$*&0$*$)$*(.$)2)$*'2$*%-$*''$*(1$*('$)0-$**,$*)&$***$*+*$*+.$*).$*'.$*(+$*(,$*)$$*($$)/&$*$3$*(/$*'1$*$0$*(($*&)$*(.$*'$$*'/$*%$$)30$*(+$*&0$*(2$*(-$*$+$*(-$*(*$*&($*&+$*'%$*&'$*&0$*$*$*%1$*'.$*&)$*&-$*&'$*&&$*&'$*%,$*&($*&-$)31$)01$*$*$*%&$*%0$)3.$)3/$*%$$*$,$*$-$*')$*%'$)31$*&'$)3,$*$($*%)$*&($*$,$*%3$*$3$*%)$*%*$*%'$*%2$*&,$*$3$*$,$*&0$*%'$)3,$*'&$*)'$*)'$*()$*&,$*'$$*$0$*$)$)1($*&($)1/$)0)$*&,$*%)$*(*$*&.$*'-$*$/$*%)$*&1$*$2$)3+$*$+$*%1$)30$)/*$)2*$*%$$*$&$*$*$)-3$)3,$*$%$*%/$*$3$*&-$*&+$*'1$*(&$*+&$*,+$*-$$*-3$*03$*1'$*/($*,1$*+.$*.1$*-$$**+$*-+$*('$*,1$*-2$*'3$*'*$*'*$*'&$)/.$)0,$)1'$)1&$)3*$*$*$)33$)3.$*&*$)3)$)11$)0+$)3)$)3.$)2+$).($)2($)3-$)3&$)12$)1+$*$&$)1'$*$'$)20$)00$)21$)3)$)22$)1-$*$+$)33$)2'$*$+$)32$*$&$*$3$)32$*$&$*%($)2/$)3'$*$*$)0&$)-/$)3)$*$,$*%+$)2-$)3*$)1$$)3%$*%%$*$*$*$,$*$%$)3%$*%0$)3/$)21$)2+$)2&$)2$$)2+$)31$)2-$)1%$*$*$*$*$)0,$*$+$*$$$*$$$)3)$)3$$*$&$*$%$*%,$*%)$)2)$)3,$)/($)*3$)-+$)2*$*$-$)3($*%%$)23$)3)$)1)$)33$)11$)2+$)3&$*$/$)32$*$-$)2-$)2+$*$'$*$3$)32$)30$)3)$)/0$*$1$)-3$*$%$)3/$*$2$*$$$*%'$)32$*$%$)2'$).-$*$$$*$%$*%&$*$)$)3/$)2/$)1.$*$-$*%%$)3%$)2'$)1,$*%'$*$+$*%3$)23$*%+$)30$)1-$*%($)--$*$*$)3)$)31$*$2$)1)$)+0$*$'$)1.$)32$),($)3&$)30$)0$$*$.$)0-$)2/$)3+$)3)$)33$*$'$)3$$)3)$)3+$*$+$)2%$*$.$*$+$*%&$)2*$*%($)1)$)21$*$'$)1+$*%($*$2$).3$)3*$*$,$*$($)2*$)1&$)22$)2,$*$,$*%&$)1-$)00$)3($)1/$)1.$*%%$),)$*%($*$-$)3+$*%$$*$+$)3/$)3($*$2$)(*$*$2$)22$)2&$*$/$)2($*$+$)2*$*$,$)1+$*%%$*$/$*$)$)3,$*$,$)22$)1*$)2($*$%$)0/$*$2"
	encoded_signature = "$*$+$)0$$)2+$)2,$)2*$)03$*$,$)21$*$%$)3/$)2)$)1.$)3)$*$,$)12$)3%$)1&$)2$$*%3$)2'$).*$)/&$)2&$)20$)1)$)2*$*%)$)2)$)3)$)2.$)3%$)21$)3&$)3&$)2*$)3'$)3,$)32$)01$).1$)2)$)3,$)30$)3$$)2*$)3&$)3+$)2%$)0%$)3%$*%,$)2.$)1'$)1-$*$&$)01$)2&$),+$)2,$)2.$*$/$)2'$)1.$)3'$*%$$)3+$)2'$)02$)21$)2%$*%.$)10$)1-$)3&$)20$*%$$)3'$)33$*$1$)2%$)2)$*$&$*$%$)1*$)0/$)1'$)3&$)2'$)3$$*$/$)2-$)32$)1&$)3,$)/($)2%$)3+$)3*$)3/$)1*$)0.$)3,$)2-$*$($*$'$*$-$)2/$*$*$)3,$)10$)3$$)2+$)20$)3*$*$'$)12$*$'$*$($*$/$*%.$)3($)3,$)3%$)2)$)02$)3-$)1,$)32$)3/$*$)$)23$)./$)2+$)33$)3.$)/0$)1+$)01$)-0$*$&$)0*$)2.$)23$)+($*%($*$0$*$+$*$/$)32$)3'$)2'$)2&$)32$*%%$*$1$)/&$)30$*$2$)21$)2*$)/1$*$($)22$*$2$)3)$*%$$)2)$*$$$)31$)3*$)3&$)23$)33$)2)$)3*$*$&$)3*$)01$)3%$).3$)31$*$&$)3+$)3-$)0)$)2*$)1)$)1.$)3&$*%%$*$+$)0.$)33$*$)$*$/$*$0$*$&$*%*$)3+$)1.$)0+$)2'$)3)$)2+$)1,$)30$*%*$)3-$)31$)2'$*$$$*(($*+'$*&0$*-0$*-/$**0$*&($*&&$*&0$)32$*%*$)3+$)3'$*$.$*%3$*$$$*&+$)32$)3,$*$+$)3/$*$0$)3.$)3,$)0$$*$2$*$%$*$'$)2'$)10$*%*$)0.$)3'$*%/$*%'$*$$$*%-$*%0$*'&$*&+$*%%$)3%$*$1$)02$*$)$).0$)3&$*&)$*%,$*&$$*$3$*&($)3-$*$,$)1&$*%1$)3/$*%2$*%+$)33$)3($*%,$*&&$)1+$*%'$*&2$*$0$)33$)2)$)3-$)3*$)2'$)3.$*%'$*%$$*%*$*&*$)3'$*%,$)3-$*%($*&($*$-$*$%$*$%$*&($)30$*%3$*$/$*%&$*%*$*%,$*&'$)2%$*%-$*$)$*$&$*%-$*$/$*&,$*%%$*&($*&%$*&0$*&%$*%,$*)&$*&,$*)1$*).$*+%$*.$$*-2$*-/$*.0$*-3$*-$$*)2$**3$**'$**-$*)/$**+$*+2$*(($*(0$**($*+%$*'*$**$$*'($*&1$*'2$*&+$*&&$*')$*(+$*&3$*%($*&0$*'*$*&%$*&/$*$/$)3/$*&,$(&,$*$1$*$)$*$2$*&($)32$)2%$)33$*%)$*$1$)3.$)&+$)3/$)32$)33$*%($*%&$*$+$).3$)3&$*%%$*%$$)13$*%&$)32$*$1$)3+$)30$)3.$)3-$)2+$*$*$).2$*$.$)3*$)2$$*$%$*$'$*%,$)2.$*$-$)3-$)13$)/.$)1.$)3&$)2.$)33$*$'$*$+$*$.$)3'$)2+$)2.$*$/$)0'$).&$)3*$*%1$)3&$)0($)2&$*$*$*%3$*%2$*$+$)3'$*&.$*%$$*$0$*&,$*%*$*%+$*(($*(0$*,-$*,%$*0'$*2%$+'+$+0.$,)-$-$+$-)0$-.2$-1*$-20$-/.$-,2$-.+$-2/$.&.$.'*$.(%$.()$-1/$-&($,32$,*1$,&+$+3($+/1$+*3$+(*$*02$*12$*0)$*.,$*-($*,3$*,2$*)3$*))$*'3$*&+$*&-$*$1$*%,$*&'$)0*$*%+$*&.$)22$*$*$)30$*&%$*$2$*$.$*%)$)22$)21$*&)$*%.$)2'$)1*$*&'$)31$)3%$)3,$*$-$)20$*&%$*%$$)2'$*$*$)0,$)3-$*%&$)//$)3%$*$0$)3)$)2/$*&+$*%.$*%$$*(+$*%)$**)$*(1$***$*,)$**3$*++$*)+$*,3$*-/$*-)$*..$*/3$*1($*2%$*12$*33$*2($*3-$*1-$+$1$*3($+'($+%/$+&1$+%'$+%*$*0'$*.)$*..$*+)$*0)$*.*$*3'$+&($+%1$+$+$+$,$*1+$*/-$*,.$**1$*-$$*,%$*,($*))$*+,$*0*$*.+$*1'$*03$*.+$*-,$*+0$*,)$*)&$*),$*(1$*(+$*+$$**,$**$$*)3$*-2$*-1$*,2$*1($+&2$+-'$,+3$.,%$000$3()%$/0%%0.%%.+%$)/$2/%$1&*$/+&$.3)$.&'$-.($,12$,**$+3.$+.,$++-$*30$+'3$+&'$+%&$+'1$+(1$*2'$++$$++$$+'+$++$$+*($+*-$+.2$+-$$+*'$++1$+.,$+,&$+)&$+)3$+*%$+*%$+*%$+-,$+/&$+3($+0,$+0-$++3$+'-$*2/$*++$*,/$***$*%%$*)$$*$0$*'.$*'*$*%&$*%/$*%+$*$%$*$*$*%,$*(&$*&.$*'($*$%$*(($*&($*',$*',$*'($*&,$*'-$*$3$*(0$)3%$*(.$*&)$*'0$*)/$*)'$)1-$*+/$**.$*,$$*,3$*-&$**,$*(.$*)/$*))$*)2$*(3$)0'$*%/$*)1$*(0$*%+$*(0$*&/$*)'$*'/$*('$*%'$*$*$*)'$*'+$*),$*)+$*%+$*)+$*)-$*'$$*'$$*'2$*&0$*'+$*$.$*&,$*'3$*&3$*&0$*&2$*&,$*&/$*%3$*&/$*&2$*$'$)1*$*%%$*%*$*%2$*$&$)33$*%($*$/$*$-$*',$*%2$*$&$*&-$)31$*$.$*%1$*&3$*%$$*&*$*%($*&'$*%*$*%,$*&$$*&2$*%+$*$.$*&3$*%+$*$.$*($$***$*)1$*)&$*'($*'/$*%'$*$.$)10$*&'$)1/$)0*$*&2$*%1$*(3$*&3$*'1$*%($*%)$*&2$*%+$)3/$*$,$*%1$)32$)/,$)2,$*$0$)32$*$&$)-2$)3-$*$'$*%1$*%*$*'%$*&/$*(-$*)%$*,($*-3$*.-$*/3$*3($*3,$*10$*/%$*-0$*0($*.,$*,)$*/'$*)3$*.)$*/&$*)+$*(+$*'/$*'.$)/3$)01$)1,$)1)$)3'$*$'$)33$)3-$*&)$)3'$)10$)0/$)3)$)3/$)2)$).'$)2)$)3/$)3&$)12$)1,$*$'$)1*$*$($)21$)0.$)21$)3'$)2.$)11$*$+$)3+$)2*$*$-$*$$$*$'$*$3$)3/$*$($*%*$)22$)3&$*$,$)/3$)-+$)3&$*$*$*%*$)2.$)3.$)03$)20$*%*$*$+$*$)$*$%$)23$*&&$)32$)3%$)2($)2*$)10$)2,$)3/$)2-$)00$*$-$*$*$)0+$*$2$)3-$)31$)3*$)20$*$%$)33$*%*$*%+$)2,$)3'$)/&$)*.$)-*$)2-$*$,$)3)$*$.$)20$)3+$)1+$)30$)1-$)2/$)23$*$($)30$*$.$)2-$)20$*$)$*$-$*$&$*$%$)3*$)/,$*$.$).%$*$&$)3,$*$1$)3+$*%&$)3.$)32$)2'$).-$)32$*$'$*%$$*$,$)3($)20$)1-$*$*$*%,$)23$)2($)1'$*%+$*$($*%0$)23$*%,$)31$)2%$*%($)-)$*$)$)3.$)32$*$/$)1&$)+0$*$.$)10$)30$),($)21$)32$)/3$*$0$)0-$)22$)3($)3+$)32$*$%$)20$)3*$)3/$*$($)13$*$.$*$.$*$2$)2)$*$2$)1%$)23$*$*$)1.$*$2$*$0$)./$)3)$*$)$)32$)2*$)1'$)22$)2)$*$,$*$1$)1($)1%$)3'$)11$)1/$*$0$),*$*%,$*$.$)3)$*$1$*$/$)3-$)3)$*$1$)($$*$1$)3%$)2&$*$.$)2'$*$'$)2&$*$'$)1($*%$$*$/$*$&$)3'$*$'$)20$)1)$)13$)32$)0/$*$1"
	#print(w[0],w[1],ord(w[0]),ord(w[1]))



	white_bal = find_bias(encoded_white_bal)
	signature = Process(encoded_signature, white_bal)

	R,G,B = color_parse(signature)
	print(R,G,B)

if __name__ == '__main__':
	main()


